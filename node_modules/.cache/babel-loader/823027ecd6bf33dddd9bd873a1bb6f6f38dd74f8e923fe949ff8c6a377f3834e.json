{"ast":null,"code":"import { create } from \"zustand\";\nconst useStore = create(set => ({\n  tags: [],\n  addTag: tag => set(state => ({\n    tags: [...state.tags, tag]\n  })),\n  removeTag: index => set(state => ({\n    tags: state.tags.filter((_, i) => i !== index)\n  }))\n}));\nexport default useStore;","map":{"version":3,"names":["create","useStore","set","tags","addTag","tag","state","removeTag","index","filter","_","i"],"sources":["/Users/bandurabohdan/Downloads/test_formula/src/store/store.ts"],"sourcesContent":["import { create } from \"zustand\";\n\nexport type TagType = {\n  name: string;\n  category: string;\n  value: string;\n  id: string;\n};\n\ninterface State {\n  tags: TagType[];\n  addTag: (tag: TagType) => void;\n  removeTag: (index: number) => void;\n}\n\nconst useStore = create<State>((set) => ({\n  tags: [],\n  addTag: (tag) => set((state) => ({ tags: [...state.tags, tag] })),\n  removeTag: (index) =>\n    set((state) => ({ tags: state.tags.filter((_, i) => i !== index) })),\n}));\n\nexport default useStore;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAehC,MAAMC,QAAQ,GAAGD,MAAM,CAASE,GAAG,KAAM;EACvCC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAGC,GAAG,IAAKH,GAAG,CAAEI,KAAK,KAAM;IAAEH,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAI,EAAEE,GAAG;EAAE,CAAC,CAAC,CAAC;EACjEE,SAAS,EAAGC,KAAK,IACfN,GAAG,CAAEI,KAAK,KAAM;IAAEH,IAAI,EAAEG,KAAK,CAACH,IAAI,CAACM,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK;EAAE,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC;AAEH,eAAeP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}